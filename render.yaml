services:
  - type: web
    name: nexa-backend
    env: python
    plan: free
    rootDir: backend
    buildCommand: pip install -r requirements.txt
    startCommand: uvicorn app.main:app --host 0.0.0.0 --port 10000
    healthCheckPath: /health
    envVars:
      # Render completar치 autom치ticamente con la URL del frontend para CORS
      - key: FRONTEND_ORIGIN
        fromService:
          name: nexa-frontend
          type: web
          property: url
      # Render inyecta este connectionString como "postgres://..."
      # Abajo ajustamos settings.py para que lo convierta correctamente.
      - key: DATABASE_URL
        fromDatabase:
          name: nexa-db
          property: connectionString
      # Agrega tu key de OpenAI al crear el blueprint (no se versiona)
      - key: OPENAI_API_KEY
        sync: false
      # Render generar치 un secreto aleatorio
      - key: JWT_SECRET
        generateValue: true

  - type: web
    name: nexa-frontend
    env: node
    plan: free
    rootDir: frontend
    buildCommand: npm install && npm run build
    startCommand: npm run start
    envVars:
      # Apunta autom치ticamente al backend que se crea en este blueprint
      - key: NEXT_PUBLIC_API_BASE
        fromService:
          name: nexa-backend
          type: web
          property: url

databases:
  - name: nexa-db
    databaseName: nexa
    user: nexa
